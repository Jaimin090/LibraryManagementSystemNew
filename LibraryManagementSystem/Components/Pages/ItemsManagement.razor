@page "/itemsmgmt"
@using LibraryManagementSystem.DatabaseManager
@using LibraryManagementSystem.Models.Interfaces
@using LibraryManagementSystem.Exceptions
@using LibraryManagementSystem.Models.Users
@using LibraryManagementSystem.Models;
@using LibraryManagementSystem.Models.Items;
@using Npgsql
@using NpgsqlTypes

<div>
    <h2>Items</h2>

    <div>
        <h5>Books</h5>
        @if (books.Count > 0)
        {
            <div style="display: flex; justify-content: space-evenly; align-content: center; margin-bottom:0">
                <p style="border: 1px solid black; flex-grow: 1; text-align: center; flex-basis:0; margin-block:0">Id</p>
                <p style="border: 1px solid black; flex-grow: 1; text-align: center; flex-basis:0; margin-block:0">Title</p>
                <p style="border: 1px solid black; flex-grow: 1; text-align: center; flex-basis:0; margin-block:0">
                    Author
                </p>

                @if (MauiProgram.currUser is Admin)
                {
                    <p style="flex-grow: 1;border: 1px solid black; text-align: center; flex-basis:0; margin-block:0">Action</p>
                }
            </div>
            @foreach (Book book in books)
            {
                <div style="display: flex; justify-content: space-evenly; align-content: center; margin-top:0">
                    <p style="border: 1px solid black; flex-grow: 1; text-align: center; flex-basis:0; margin-block:0">
                        @book.Id
                    </p>
                    <p style="border: 1px solid black; flex-grow: 1; text-align: center; flex-basis:0; margin-block:0">
                        @book.Title
                    </p>
                    <p style="border: 1px solid black; flex-grow: 1; text-align: center; flex-basis:0; margin-block:0">
                        @book.Author
                    </p>
                    @if (MauiProgram.currUser is Admin)
                    {
                        <p style="flex-grow: 1; text-align: center; flex-basis:0; margin-block:0">
                            <button style="display: block; width: 100%; color: red" @onclick="() => RemoveItem<Book>(book, books)">
                                Remove
                            </button>
                        </p>
                    }
                </div>
            }
        }
        else
        {
            <h6>Empty</h6>
        }
    </div>

    <div>
        <h5 style="margin-top: 5vh;">Games</h5>
        @if (games.Count > 0)
        {
            <div style="display: flex; justify-content: space-evenly; align-content: center; margin-bottom:0">
                <p style="border: 1px solid black; flex-grow: 1; text-align: center; flex-basis:0; margin-block:0">Id</p>
                <p style="border: 1px solid black; flex-grow: 1; text-align: center; flex-basis:0; margin-block:0">Name</p>
                <p style="flex-grow: 1;border: 1px solid black; text-align: center; flex-basis:0; margin-block:0">Action</p>
            </div>
            @foreach (Game game in games)
            {
                <div style="display: flex; justify-content: space-evenly; align-content: center; margin-top:0">
                    <p style="border: 1px solid black; flex-grow: 1; text-align: center; flex-basis:0; margin-block:0">
                        @game.Id
                    </p>
                    <p style="border: 1px solid black; flex-grow: 1; text-align: center; flex-basis:0; margin-block:0">
                        @game.Name
                    </p>
                    @if (MauiProgram.currUser is Admin)
                    {
                        <p style="flex-grow: 1; text-align: center; flex-basis:0; margin-block:0">
                            <button style="display: block; width: 100%; color: red" @onclick="() => RemoveItem<Game>(game, games)">
                                Remove
                            </button>
                        </p>
                    }
                </div>
            }
        }
        else
        {
            <h6>Empty</h6>
        }

    </div>

    <div>
        <h5 style="margin-top: 5vh;">DVDs</h5>
        @if (dvds.Count > 0)
        {
            <div style="display: flex; justify-content: space-evenly; align-content: center; margin-bottom:0">
                <p style="border: 1px solid black; flex-grow: 1; text-align: center; flex-basis:0; margin-block:0">Id</p>
                <p style="border: 1px solid black; flex-grow: 1; text-align: center; flex-basis:0; margin-block:0">Title</p>
                <p style="border: 1px solid black; flex-grow: 1; text-align: center; flex-basis:0; margin-block:0">
                    Director
                </p>
                <p style="flex-grow: 1;border: 1px solid black; text-align: center; flex-basis:0; margin-block:0">Action</p>

            </div>
            @foreach (DVD dvd in dvds)
            {
                <div style="display: flex; justify-content: space-evenly; align-content: center; margin-top:0">
                    <p style="border: 1px solid black; flex-grow: 1; text-align: center; flex-basis:0; margin-block:0">
                        @dvd.Id
                    </p>
                    <p style="border: 1px solid black; flex-grow: 1; text-align: center; flex-basis:0; margin-block:0">
                        @dvd.Title
                    </p>
                    <p style="border: 1px solid black; flex-grow: 1; text-align: center; flex-basis:0; margin-block:0">
                        @dvd.Director
                    </p>
                    @if (MauiProgram.currUser is Admin)
                    {
                        <p style="flex-grow: 1; text-align: center; flex-basis:0; margin-block:0">
                            <button style="display: block; width: 100%; color: red" @onclick="() => RemoveItem<DVD>(dvd, dvds)">
                                Remove
                            </button>
                        </p>
                    }

                </div>
            }
        }
        else
        {
            <h6>Empty</h6>
        }

    </div>

    @if (MauiProgram.currUser is Owner || MauiProgram.currUser is Librarian)
    {
        <div style="display: flex; flex-direction: column; gap: 10px; margin-top: 10vh">
            <h3>Add item</h3>
            <div>
                <label>Item type: </label>
                <select @bind="itemType">
                    <option>Book</option>
                    <option>DVD</option>
                    <option>Game</option>
                </select>
            </div>

            @if (!string.IsNullOrEmpty(itemType))
            {
                @if (itemType == "Book")
                {
                    <div>
                        <label>Title: </label>
                        <input @bind="itemName" />
                    </div>

                    <div>
                        <label>Author: </label>
                        <input @bind="author" />
                    </div>
                }

                @if (itemType == "DVD")
                {
                    <div>
                        <label>Title: </label>
                        <input @bind="itemName" />
                    </div>

                    <div>
                        <label>Director: </label>
                        <input @bind="director" />
                    </div>
                }

                @if (itemType == "Game")
                {
                    <div>
                        <label>Name: </label>
                        <input @bind="itemName" />
                    </div>
                }
            }

            <button style="width: fit-content" @onclick="AddItem">Add item</button>
        </div>
        <p style="color: red; font-size: 18px;">@err</p>
    }
</div>

@code {

    private string? itemName, author, director, err, itemType;

    private List<User> users = [];

    private List<Game> games = [];
    private List<DVD> dvds = [];
    private List<Book> books = [];

    // On initialisation, assign the games, dvds, and books lists from LibraryItemsManager, populating the data
    protected override void OnInitialized()
    {
        try
        {
            users = UsersManagement.users;

            games = LibraryItemsManager.Games;
            dvds = LibraryItemsManager.Dvds;
            books = LibraryItemsManager.Books;

            itemType = "Book";

        }
        catch (Exception ex)
        {
            err = ex.Message;
        }
    }

    /*
    Remove an item from either books, dvds, or games list

    @param - id (int) - id of the item
    @param - itemList (List) - either books, dvds, or games

    */
    private void RemoveItem<T>(T target, List<T> itemList) where T : ILibraryItem
    {
        try
        {
            if (MauiProgram.currUser is Admin) LibraryItemsManager.RemoveItem<T>(target, itemList);
        }
        catch (Exception ex)
        {
            err = ex.Message;
        }
    }

    // Action after user clicks on "Add item" after filling all required information

    private async void AddItem()
    {
        try
        {

            List<ILibraryItem> items = new();
            items.AddRange(books);
            items.AddRange(games);
            items.AddRange(dvds);

            int id = items.OrderByDescending(item => item.Id).First().Id + 1;

            if (MauiProgram.currUser is Admin)
            {
                switch (itemType)
                {
                    case "Book":

                        if (string.IsNullOrEmpty(itemName)) throw new EmptyInputError("Book title");
                        if (string.IsNullOrEmpty(author)) throw new EmptyInputError("Author");

                        Book book = new Book(id, itemName, author);
                        book.IsAvailable = true;
                        LibraryItemsManager.AddBook(book);

                        break;
                    case "DVD":
                        if (string.IsNullOrEmpty(itemName)) throw new EmptyInputError("DVD title");
                        if (string.IsNullOrEmpty(director)) throw new EmptyInputError("Director");

                        DVD dvd = new DVD(id, itemName, director);
                        dvd.IsAvailable = true;
                        LibraryItemsManager.AddDVD(dvd);

                        break;
                    case "Game":
                        if (string.IsNullOrEmpty(itemName)) throw new EmptyInputError("Game name");
                        Game game = new Game(id, itemName);
                        LibraryItemsManager.AddGame(game);

                        break;
                    default:
                        break;
                }
            }
        }
        catch (Exception ex)
        {
            err = ex.Message;
        }
    }
}
